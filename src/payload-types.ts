/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
    'home-page': HomePage;
    'services-page': ServicesPage;
    'about-page': AboutPage;
    'gallery-page': GalleryPage;
    'contact-page': ContactPage;
    'get-quote-page': GetQuotePage;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    'home-page': HomePageSelect<false> | HomePageSelect<true>;
    'services-page': ServicesPageSelect<false> | ServicesPageSelect<true>;
    'about-page': AboutPageSelect<false> | AboutPageSelect<true>;
    'gallery-page': GalleryPageSelect<false> | GalleryPageSelect<true>;
    'contact-page': ContactPageSelect<false> | ContactPageSelect<true>;
    'get-quote-page': GetQuotePageSelect<false> | GetQuotePageSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * Global header configuration
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  logo: string | Media;
  siteTitle: string;
  navigation?:
    | {
        label: string;
        href: string;
        id?: string | null;
      }[]
    | null;
  ctaButton: {
    label: string;
    href: string;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Global footer configuration
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  brand: {
    logo: string | Media;
    title: string;
    description: string;
  };
  columns?:
    | {
        title: string;
        links?:
          | {
              label: string;
              href: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  socialLinks?:
    | {
        platform: 'instagram' | 'facebook' | 'linkedin';
        url: string;
        id?: string | null;
      }[]
    | null;
  copyright: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Global home page configuration
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page".
 */
export interface HomePage {
  id: string;
  title: string;
  heroSection?: {
    /**
     * Toggle to show or hide this section on the homepage
     */
    isVisible?: boolean | null;
    heading?: string | null;
    description?: string | null;
    heroImage?: (string | null) | Media;
  };
  clientLoveSection?: {
    /**
     * Toggle to show or hide this section on the homepage
     */
    isVisible?: boolean | null;
    heading?: string | null;
    features?:
      | {
          image?: (string | null) | Media;
          title?: string | null;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  photoBoothSection?: {
    /**
     * Toggle to show or hide this section on the homepage
     */
    isVisible?: boolean | null;
    heading?: string | null;
    subheading?: string | null;
    booths?:
      | {
          image?: (string | null) | Media;
          title?: string | null;
          id?: string | null;
        }[]
      | null;
    ctaButton?: {
      text?: string | null;
      link?: string | null;
    };
  };
  videoSection?: {
    /**
     * Toggle to show or hide this section on the homepage
     */
    isVisible?: boolean | null;
    heading?: string | null;
    videos?:
      | {
          thumbnail?: (string | null) | Media;
          videoUrl?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  howItWorksSection?: {
    /**
     * Toggle to show or hide this section on the homepage
     */
    isVisible?: boolean | null;
    heading?: string | null;
    backgroundImage?: (string | null) | Media;
    steps?:
      | {
          stepNumber?: string | null;
          title?: string | null;
          description?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  momentsSection?: {
    /**
     * Toggle to show or hide this section on the homepage
     */
    isVisible?: boolean | null;
    heading?: string | null;
    subheading?: string | null;
    galleryImages?:
      | {
          image?: (string | null) | Media;
          altText?: string | null;
          id?: string | null;
        }[]
      | null;
    featuredImage?: (string | null) | Media;
  };
  testimonialsSection?: {
    /**
     * Toggle to show or hide this section on the homepage
     */
    isVisible?: boolean | null;
    heading?: string | null;
    subheading?: string | null;
    testimonials?:
      | {
          name?: string | null;
          role?: string | null;
          rating?: number | null;
          text?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  readyToBookSection?: {
    /**
     * Toggle to show or hide this section on the homepage
     */
    isVisible?: boolean | null;
    heading?: string | null;
    description?: string | null;
    buttonText?: string | null;
    buttonLink?: string | null;
    sectionImage?: (string | null) | Media;
  };
  faqsSection?: {
    /**
     * Toggle to show or hide this section on the homepage
     */
    isVisible?: boolean | null;
    heading?: string | null;
    subheading?: string | null;
    faqs?:
      | {
          question?: string | null;
          answer?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  seo?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Global home page configuration
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services-page".
 */
export interface ServicesPage {
  id: string;
  /**
   * Page title for the service page
   */
  title: string;
  /**
   * URL slug for the service page
   */
  slug: string;
  seo: {
    /**
     * SEO title (max 60 characters)
     */
    title: string;
    /**
     * SEO description (max 160 characters)
     */
    description: string;
    /**
     * SEO keywords (comma separated)
     */
    keywords?: string | null;
    /**
     * Open Graph image for social sharing
     */
    ogImage?: (string | null) | Media;
  };
  heroSection: {
    isVisible?: boolean | null;
    heroImage: string | Media;
    title: string;
    description: string;
  };
  serviceDesignSection: {
    isVisible?: boolean | null;
    title: string;
    services?:
      | {
          title: string;
          /**
           * e.g., $600
           */
          price: string;
          /**
           * e.g., 3 hours
           */
          duration: string;
          /**
           * e.g., $150/HR
           */
          extraHourPrice: string;
          description: string;
          /**
           * e.g., Weddings, corporate parties, birthdays
           */
          perfectFor: string;
          features?:
            | {
                feature: string;
                id?: string | null;
              }[]
            | null;
          image: string | Media;
          buttonText?: string | null;
          isVisible?: boolean | null;
          id?: string | null;
        }[]
      | null;
  };
  customizedSection: {
    isVisible?: boolean | null;
    title: string;
    addOns?:
      | {
          title: string;
          /**
           * e.g., $200.00
           */
          price: string;
          description: string;
          isVisible?: boolean | null;
          id?: string | null;
        }[]
      | null;
  };
  backdropSection: {
    isVisible?: boolean | null;
    title: string;
    description: string;
    backgroundImage: string | Media;
    galleryImages?:
      | {
          image: string | Media;
          alt: string;
          id?: string | null;
        }[]
      | null;
  };
  videoSection: {
    isVisible?: boolean | null;
    title: string;
    videos?:
      | {
          title: string;
          thumbnail: string | Media;
          /**
           * Video URL (YouTube, Vimeo, etc.)
           */
          videoUrl?: string | null;
          isVisible?: boolean | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Global About page configuration
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-page".
 */
export interface AboutPage {
  id: string;
  seo: {
    title: string;
    description: string;
    keywords?: string | null;
  };
  aboutContent: {
    title: string;
    description: string;
    secondaryDescription?: string | null;
    highlightText?: string | null;
    image: string | Media;
  };
  readyBookSection: {
    isVisible?: boolean | null;
    heading: string;
    description: string;
    buttonText?: string | null;
    buttonLink?: string | null;
    sectionImage?: (string | null) | Media;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Gallery section configuration
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery-page".
 */
export interface GalleryPage {
  id: string;
  heading: string;
  subheading?: string | null;
  topGridImages?:
    | {
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  fullImage1?: (string | null) | Media;
  middleGridImages?:
    | {
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  secondTopGridImages?:
    | {
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  fullImage2?: (string | null) | Media;
  bottomGridImages?:
    | {
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Contact page content and settings
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-page".
 */
export interface ContactPage {
  id: string;
  heading: string;
  subheading?: string | null;
  contactItems: {
    title: string;
    description: string;
    iconName: 'phone' | 'email' | 'location' | 'time';
    id?: string | null;
  }[];
  formTitle?: string | null;
  mapHeading?: string | null;
  mapEmbedUrl?: string | null;
  seo?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Configure content for the Get a Quote form page
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "get-quote-page".
 */
export interface GetQuotePage {
  id: string;
  heading: string;
  subheading?: string | null;
  eventBoothOptions?:
    | {
        label: string;
        id?: string | null;
      }[]
    | null;
  addOns?:
    | {
        label: string;
        id?: string | null;
      }[]
    | null;
  themeQuestion?: string | null;
  contactHeading?: string | null;
  preferredContactMethods?:
    | {
        method: string;
        id?: string | null;
      }[]
    | null;
  submitButtonText?: string | null;
  seo?: {
    title?: string | null;
    description?: string | null;
    keywords?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?: T;
  siteTitle?: T;
  navigation?:
    | T
    | {
        label?: T;
        href?: T;
        id?: T;
      };
  ctaButton?:
    | T
    | {
        label?: T;
        href?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  brand?:
    | T
    | {
        logo?: T;
        title?: T;
        description?: T;
      };
  columns?:
    | T
    | {
        title?: T;
        links?:
          | T
          | {
              label?: T;
              href?: T;
              id?: T;
            };
        id?: T;
      };
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  copyright?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page_select".
 */
export interface HomePageSelect<T extends boolean = true> {
  title?: T;
  heroSection?:
    | T
    | {
        isVisible?: T;
        heading?: T;
        description?: T;
        heroImage?: T;
      };
  clientLoveSection?:
    | T
    | {
        isVisible?: T;
        heading?: T;
        features?:
          | T
          | {
              image?: T;
              title?: T;
              description?: T;
              id?: T;
            };
      };
  photoBoothSection?:
    | T
    | {
        isVisible?: T;
        heading?: T;
        subheading?: T;
        booths?:
          | T
          | {
              image?: T;
              title?: T;
              id?: T;
            };
        ctaButton?:
          | T
          | {
              text?: T;
              link?: T;
            };
      };
  videoSection?:
    | T
    | {
        isVisible?: T;
        heading?: T;
        videos?:
          | T
          | {
              thumbnail?: T;
              videoUrl?: T;
              id?: T;
            };
      };
  howItWorksSection?:
    | T
    | {
        isVisible?: T;
        heading?: T;
        backgroundImage?: T;
        steps?:
          | T
          | {
              stepNumber?: T;
              title?: T;
              description?: T;
              id?: T;
            };
      };
  momentsSection?:
    | T
    | {
        isVisible?: T;
        heading?: T;
        subheading?: T;
        galleryImages?:
          | T
          | {
              image?: T;
              altText?: T;
              id?: T;
            };
        featuredImage?: T;
      };
  testimonialsSection?:
    | T
    | {
        isVisible?: T;
        heading?: T;
        subheading?: T;
        testimonials?:
          | T
          | {
              name?: T;
              role?: T;
              rating?: T;
              text?: T;
              id?: T;
            };
      };
  readyToBookSection?:
    | T
    | {
        isVisible?: T;
        heading?: T;
        description?: T;
        buttonText?: T;
        buttonLink?: T;
        sectionImage?: T;
      };
  faqsSection?:
    | T
    | {
        isVisible?: T;
        heading?: T;
        subheading?: T;
        faqs?:
          | T
          | {
              question?: T;
              answer?: T;
              id?: T;
            };
      };
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services-page_select".
 */
export interface ServicesPageSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
      };
  heroSection?:
    | T
    | {
        isVisible?: T;
        heroImage?: T;
        title?: T;
        description?: T;
      };
  serviceDesignSection?:
    | T
    | {
        isVisible?: T;
        title?: T;
        services?:
          | T
          | {
              title?: T;
              price?: T;
              duration?: T;
              extraHourPrice?: T;
              description?: T;
              perfectFor?: T;
              features?:
                | T
                | {
                    feature?: T;
                    id?: T;
                  };
              image?: T;
              buttonText?: T;
              isVisible?: T;
              id?: T;
            };
      };
  customizedSection?:
    | T
    | {
        isVisible?: T;
        title?: T;
        addOns?:
          | T
          | {
              title?: T;
              price?: T;
              description?: T;
              isVisible?: T;
              id?: T;
            };
      };
  backdropSection?:
    | T
    | {
        isVisible?: T;
        title?: T;
        description?: T;
        backgroundImage?: T;
        galleryImages?:
          | T
          | {
              image?: T;
              alt?: T;
              id?: T;
            };
      };
  videoSection?:
    | T
    | {
        isVisible?: T;
        title?: T;
        videos?:
          | T
          | {
              title?: T;
              thumbnail?: T;
              videoUrl?: T;
              isVisible?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-page_select".
 */
export interface AboutPageSelect<T extends boolean = true> {
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  aboutContent?:
    | T
    | {
        title?: T;
        description?: T;
        secondaryDescription?: T;
        highlightText?: T;
        image?: T;
      };
  readyBookSection?:
    | T
    | {
        isVisible?: T;
        heading?: T;
        description?: T;
        buttonText?: T;
        buttonLink?: T;
        sectionImage?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery-page_select".
 */
export interface GalleryPageSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  topGridImages?:
    | T
    | {
        image?: T;
        id?: T;
      };
  fullImage1?: T;
  middleGridImages?:
    | T
    | {
        image?: T;
        id?: T;
      };
  secondTopGridImages?:
    | T
    | {
        image?: T;
        id?: T;
      };
  fullImage2?: T;
  bottomGridImages?:
    | T
    | {
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-page_select".
 */
export interface ContactPageSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  contactItems?:
    | T
    | {
        title?: T;
        description?: T;
        iconName?: T;
        id?: T;
      };
  formTitle?: T;
  mapHeading?: T;
  mapEmbedUrl?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "get-quote-page_select".
 */
export interface GetQuotePageSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  eventBoothOptions?:
    | T
    | {
        label?: T;
        id?: T;
      };
  addOns?:
    | T
    | {
        label?: T;
        id?: T;
      };
  themeQuestion?: T;
  contactHeading?: T;
  preferredContactMethods?:
    | T
    | {
        method?: T;
        id?: T;
      };
  submitButtonText?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}